package com.example.demo.controllerimport com.example.demo.view.LoginViewimport javafx.beans.property.SimpleStringPropertyimport tornadofx.*import javafx.scene.control.Alertimport sun.net.www.protocol.http.HttpURLConnectionimport java.io.BufferedReaderimport java.io.InputStreamReaderimport java.io.OutputStreamWriterimport java.net.URLEncoderimport javax.print.DocFlavorclass LoginController : Controller(){    val statusProperty = SimpleStringProperty("")    var status by statusProperty    val api: Rest by inject()    init {        api.baseURI = "http://private-222d3-homework5.apiary-mock.com/api/login"    }    fun login(username: String, password: String) {        runLater { status = "" }        api.setBasicAuth(username, password)        val response = api.get("user")        val json = response.one()        fun sendPostRequest(userName: String, password: String) {            var reqParam = URLEncoder.encode("username", "UTF-8") + "=" + URLEncoder.encode(userName, "UTF-8")            reqParam += "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(password, "UTF-8")            val mURL = DocFlavor.URL(api.baseURI)            with(mURL as HttpURLConnection) {                // optional default is GET                requestMethod = "POST"                val wr = OutputStreamWriter(getOutputStream());                wr.write(reqParam);                wr.flush();                println("URL : $url")                println("Response Code : $responseCode")                BufferedReader(InputStreamReader(inputStream)).use {                    val response = StringBuffer()                    var inputLine = it.readLine()                    while (inputLine != null) {                        response.append(inputLine)                        inputLine = it.readLine()                    }                    println("Response : $response")                }                runLater {                    if (response.ok()) {                        alert(Alert.AlertType.CONFIRMATION, "login success")                    } else {                        status = json.string("message") ?: "Login failed"                    }                }            }        }    }}